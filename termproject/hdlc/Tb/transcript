# vsim -assertdebug -c -voptargs="+acc" test_hdlc bind_hdlc -do "
# log -r *
# run -all; exit" 
# Start time: 13:38:10 on Apr 19,2018
# ** Note: (vsim-3812) Design is being optimized...
# ** Note: (vopt-143) Recognized 1 FSM in module "TxFCS(fast)".
# ** Note: (vopt-143) Recognized 1 FSM in module "RxBuff(fast)".
# ** Note: (vopt-143) Recognized 1 FSM in module "TxController(fast)".
# ** Note: (vopt-143) Recognized 1 FSM in module "RxController(fast)".
# ** Note: (vopt-143) Recognized 1 FSM in module "TxBuff(fast)".
# //  Questa Sim-64
# //  Version 10.5c linux_x86_64 Jul 20 2016
# //
# //  Copyright 1991-2016 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  QuestaSim and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading sv_std.std
# Loading work.test_hdlc(fast)
# Loading work.in_hdlc(fast)
# Loading work.Hdlc(fast)
# Loading work.AddressIF(fast)
# Loading work.TxController(fast)
# Loading work.TxBuff(fast)
# Loading work.TxFCS(fast)
# Loading work.TxChannel(fast)
# Loading work.RxController(fast)
# Loading work.RxBuff(fast)
# Loading work.RxFCS(fast)
# Loading work.RxChannel(fast)
# Loading work.testPr_hdlc(fast)
# Loading work.assertions_hdlc(fast)
# Loading work.bind_hdlc(fast)
# 
# log -r *
# run -all
# *************************************************************
#                    0 - Starting Test Program
# *************************************************************
# 
# --- Behaviour 1 ---
# PASS: Receive_FlagDetect
# PASS: Receive_FlagDetect
# PASS 3: Correct bits set in Rx_SC
# PASS 15: Rx_Ready set after entire frame is recieved
# PASS 12: Rx_EoF generated after whole frame is revieved
# PASS 1: Correct data in Rx_Buff according to RX input
# 
# --- Behaviour 2 ---
# PASS: Receive_FlagDetect
# PASS 8: Abort pattern generated successfully
# PASS 10: Abort pattern detected during valid frame generates Rx_AbortSignal
# PASS 3: Correct bits set in Rx_SC
# PASS 15: Rx_Ready set after entire frame is recieved
# PASS: Receive_FlagDetect
# PASS 2: Correct data in Rx_Buff after aborted frame
# PASS: Receive_FlagDetect
# PASS 3: Correct bits set in Rx_SC
# PASS 12: Rx_EoF generated after whole frame is revieved
# PASS: Receive_FlagDetect
# PASS 2: Correct data in Rx_Buff after frame error
# PASS: Receive_FlagDetect
# PASS 3: Correct bits set in Rx_SC
# PASS 12: Rx_EoF generated after whole frame is revieved
# PASS: Receive_FlagDetect
# PASS 2: Correct data in Rx_add wave -position insertpoint  \
vsim:/test_hdlc/u_dut/Tx_Data
add wave -position insertpoint  \
vsim:/test_hdlc/u_dut/Tx_DataArray
add wave -position insertpoint  \
vsim:/test_hdlc/u_dut/Tx_DataOutBuff
add wave -position insertpoint  \
vsim:/test_hdlc/u_dut/Tx_WrBuff
add wave -position insertpoint  \
vsim:/test_hdlc/u_dut/Tx_DataInBuff
add wave -position insertpoint  \
vsim:/test_hdlc/u_dut/DataOut
x_EoF generated after whole frame is revieved
# PASS 13: Rx_Overflow set when recieveing more that 128 bytes
# PASS: Receive_FlagDetect
# PASS: Receive_FlagDetect
# PASS 3: Correct bits set in Rx_SC
# PASS 12: Rx_EoF generated after whole frame is revieved
# PASS: Receive_FlagDetect
# PASS 8: Abort pattern generated successfully
# PASS 10: Abort pattern detected during valid frame generates Rx_AbortSignal
# PASS 3: Correct bits set in Rx_SC
# PASS 15: Rx_Ready set after entire frame is recieved
# PASS: Receive_FlagDetect
# 
# --- Behaviour 4 ---
# PASS 4: Correct Tx output from Tx Buff
# PASS 17: Tx_Done is high after transmission
# 
# --- Behaviour 5 ---
# PASS 17: Tx_Done is high after transmission
# PASS 5: Start and end frame generated
# PASS 5: Start and end frame generated
# 
# --- Behaviour 6 ---
# 
# --- Behaviour 7 ---
# 
# --- Behaviour 8 ---
# PASS: Receive_FlagDetect
# 
# --- Behaviour 9 ---
# PASS 9: Tx_AbortedTrans was set on Tx_AbortFrame
# PASS 17: Tx_Done is high after transmission
# 
# --- Behaviour 10 ---
# PASS: Receive_FlagDetect
# PASS 8: Abort pattern generated successfully
# PASS 10: Abort pattern detected during valid frame generates Rx_AbortSignal
# PASS 3: Correct bits set in Rx_SC
# PASS 15: Rx_Ready set after entire frame is recieved
# 
# --- Behaviour 11 ---
# 
# --- Behaviour 12 ---
# PASS: Receive_FlagDetect
# PASS: Receive_FlagDetect
# PASS 3: Correct bits set in Rx_SC
# PASS 15: Rx_Ready set after entire frame is recieved
# PASS 12: Rx_EoF generated after whole frame is revieved
# 
# --- Behaviour 13 ---
# PASS: Receive_FlagDetect
# PASS: Receive_FlagDetect
# PASS 3: Correct bits set in Rx_SC
# PASS 15: Rx_Ready set after entire frame is recieved
# PASS 12: Rx_EoF generated after whole frame is revieved
# PASS 13: Rx_Overflow set when recieveing more that 128 bytes
# 
# --- Behaviour 14 ---
# PASS: Receive_FlagDetect
# PASS: Receive_FlagDetect
# PASS 3: Correct bits set in Rx_SC
# PASS 15: Rx_Ready set after entire frame is recieved
# PASS 12: Rx_EoF generated after whole frame is revieved
# PASS 14: Rx_FrameSize equals number of bytes recieved in a frame
# 
# --- Behaviour 15 ---
# PASS: Receive_FlagDetect
# PASS: Receive_FlagDetect
# PASS 3: Correct bits set in Rx_SC
# PASS 15: Rx_Ready set after entire frame is recieved
# PASS 12: Rx_EoF generated after whole frame is revieved
# 
# --- Behaviour 16 ---
# PASS: Receive_FlagDetect
# PASS: Receive_FlagDetect
# PASS 16: Rx_FrameError set after non-byte aligned data
# PASS 3: Correct bits set in Rx_SC
# PASS 12: Rx_EoF generated after whole frame is revieved
# PASS: Receive_FlagDetect
# PASS: Receive_FlagDetect
# PASS 16: Rc_FrameError set after Rx_FCSerr
# PASS 3: Correct bits set in Rx_SC
# PASS 12: Rx_EoF generated after whole frame is revieved
# 
# --- Behaviour 17 ---
# PASS 17: Tx_Done is high after transmission
# PASS 5: Start and end frame generated
# 
# --- Behaviour 18 ---
# PASS 18: Tx_Full set when buffer is full
# *************************************************************
#              2149250 - Finishing Test Program
# *************************************************************
# ** Note: $stop    : testPr_hdlc.sv(106)
#    Time: 2149250 ns  Iteration: 1  Instance: /test_hdlc/u_testPr
# Break in Module testPr_hdlc at testPr_hdlc.sv line 106
# Stopped at testPr_hdlc.sv line 106
#  exit
# *********************************
# *                               *
# * 	Assertion Errors: 0	  *
# *                               *
# *********************************
# End time: 13:38:13 on Apr 19,2018, Elapsed time: 0:00:03
# Errors: 0, Warnings: 0
